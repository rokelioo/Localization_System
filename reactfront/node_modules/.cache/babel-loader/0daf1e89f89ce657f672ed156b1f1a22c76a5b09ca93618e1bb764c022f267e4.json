{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pacu\\\\Desktop\\\\f\\\\ElderCare\\\\reactfront\\\\src\\\\components\\\\AdminHouseCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminHouseCheck() {\n  _s();\n  const {\n    id: userId,\n    name: initialName,\n    surname: initialSurname\n  } = useParams();\n  const [location, setLocation] = useState([{}]);\n  const [s_location, setInitLocation] = useState(null);\n  const [houseId, setHouseId] = useState('');\n  const [gridData, setGridData] = useState({});\n  const [grid, setGrid] = useState(() => {\n    return Array.from({\n      length: numRows\n    }, () => Array.from({\n      length: numCols\n    }, () => 0));\n  });\n  useEffect(() => {\n    async function fetchHouseList() {\n      try {\n        const response = await fetch(`/api/caregivers/${userId}/house-list`);\n        if (response.ok) {\n          const location = await response.json();\n\n          // do something with the location data\n          setLocation(location);\n          console.log(location);\n        } else {\n          throw new Error(`Failed to fetch house list: ${response.statusText}`);\n        }\n      } catch (error) {\n        console.error(`Error fetching house list: ${error.message}`);\n        // handle the error (e.g. show an error message to the user)\n      }\n    }\n\n    fetchHouseList();\n  }, []);\n  const PrintPlan = address => {\n    fetch(`/api/monitor?name=${encodeURIComponent(initialName)}&sirname=${encodeURIComponent(initialSurname)}&address=${encodeURIComponent(address)}&userId=${encodeURIComponent(userId)}`).then(response => response.json()).then(sentGrid => {\n      setGridData(sentGrid.housePlan);\n    }).catch(error => console.error(error));\n  };\n  const handleLocationChange = event => {\n    let text = event.target.value;\n    const myArray = text.split(\"+\");\n    setInitLocation(myArray[1]);\n    setHouseId(myArray[0]);\n  };\n  useEffect(() => {\n    if (s_location) {\n      PrintPlan(s_location);\n    }\n  }, [s_location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"AdminHouseCheck\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: location.map((house, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"houseLocation\",\n          value: `${house.id}+${house.address}`,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: house.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid-cell${cell ? ' cell-filled' : ''}`,\n          style: cell ? {\n            backgroundColor: cell\n          } : {} // Apply the paintColor as inline style\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminHouseCheck, \"z9ZJyF29IXFyubKnkE+Os7bZOHk=\", false, function () {\n  return [useParams];\n});\n_c = AdminHouseCheck;\nvar _c;\n$RefreshReg$(_c, \"AdminHouseCheck\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","AdminHouseCheck","_s","id","userId","name","initialName","surname","initialSurname","location","setLocation","s_location","setInitLocation","houseId","setHouseId","gridData","setGridData","grid","setGrid","Array","from","length","numRows","numCols","fetchHouseList","response","fetch","ok","json","console","log","Error","statusText","error","message","PrintPlan","address","encodeURIComponent","then","sentGrid","housePlan","catch","handleLocationChange","event","text","target","value","myArray","split","children","map","house","index","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","row","rowIndex","cell","cellIndex","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Pacu/Desktop/f/ElderCare/reactfront/src/components/AdminHouseCheck.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function AdminHouseCheck() {\r\n  const { id: userId, name: initialName, surname: initialSurname} = useParams();\r\n  const [location, setLocation] = useState([{}]);\r\n  const [s_location, setInitLocation] = useState(null);\r\n  const [houseId, setHouseId] = useState('');\r\n  const [gridData, setGridData] = useState({})\r\n  const [grid, setGrid] = useState(() => {\r\n    return Array.from({ length: numRows }, () => Array.from({ length: numCols }, () => 0));\r\n  });\r\n  useEffect(()=>{\r\n    async function fetchHouseList() {\r\n        try {\r\n          const response = await fetch(`/api/caregivers/${userId}/house-list`);\r\n          if (response.ok) {\r\n            const location = await response.json();\r\n            \r\n            // do something with the location data\r\n            setLocation(location);\r\n            console.log(location);\r\n          } else {\r\n            throw new Error(`Failed to fetch house list: ${response.statusText}`);\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error fetching house list: ${error.message}`);\r\n          // handle the error (e.g. show an error message to the user)\r\n        }\r\n      }\r\n    \r\n      fetchHouseList();\r\n  }, [])\r\n\r\n  const PrintPlan = (address) => {\r\n    fetch(`/api/monitor?name=${encodeURIComponent(initialName)}&sirname=${encodeURIComponent(initialSurname)}&address=${encodeURIComponent(address)}&userId=${encodeURIComponent(userId)}`)\r\n      .then(response => response.json())\r\n      .then(sentGrid => {\r\n        setGridData(sentGrid.housePlan);\r\n        \r\n      })\r\n      .catch(error => console.error(error));\r\n}\r\n\r\n  const handleLocationChange = (event) => {\r\n    let text = event.target.value;\r\n    const myArray = text.split(\"+\");\r\n    setInitLocation(myArray[1]);\r\n    setHouseId(myArray[0]);\r\n\r\n};\r\nuseEffect(() => {\r\n  if (s_location) {\r\n    PrintPlan(s_location);\r\n  }\r\n}, [s_location]);\r\n\r\n  return (\r\n    <div>AdminHouseCheck\r\n        <div>\r\n        {location.map((house, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"houseLocation\"\r\n              value={`${house.id}+${house.address}`}\r\n              onChange={handleLocationChange}\r\n            />\r\n            <label>{house.address}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"grid\">\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid-row\">\r\n            {row.map((cell, cellIndex) => (\r\n              <div\r\n                key={cellIndex}\r\n                className={`grid-cell${cell ? ' cell-filled' : ''}`}\r\n                style={cell ? { backgroundColor: cell } : {}} // Apply the paintColor as inline style\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n    \r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}