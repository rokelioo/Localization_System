{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pacu\\\\Desktop\\\\f\\\\ElderCare\\\\reactfront\\\\src\\\\components\\\\PlanHouse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../CSS/planhouse.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 30;\nconst numCols = 30;\nfunction PlanHouse() {\n  _s();\n  const [grid, setGrid] = useState(() => {\n    return Array.from({\n      length: numRows\n    }, () => Array.from({\n      length: numCols\n    }, () => 0));\n  });\n  const [CellStart, setCellStart] = useState({});\n  const [name, setRoomName] = useState('');\n  const [roomCnt, setCount] = useState(0);\n  const [paintColor, setPaintColor] = useState('rgba(0, 0, 255, 0.5)'); // Initialize with a default color\n  const [roomInfromation, setRoomInfo] = useState([]);\n  const [houseSelection, setHouseList] = useState([{}]);\n  const sessionData = sessionStorage.getItem(\"UserSession\");\n  const userId = JSON.parse(sessionData).user_id;\n  const isMouseDown = useRef(false);\n  const sCellsSelected = useRef(false);\n  const [gridUpdated, setGridUpdated] = useState(false);\n  useEffect(() => {\n    fetch(`/api/caregivers/${userId}/house-list-for-planner`).then(response => response.json()).then(house => {\n      setHouseList(house);\n      console.log(houseSelection); // Do something with the retrieved car list\n    });\n  }, []);\n  const handleMouseDown = (row, col) => {\n    if (sCellsSelected.current === false) {\n      const rowAndCell = {\n        row: row,\n        collumn: col\n      };\n      setCellStart(rowAndCell);\n      sCellsSelected.current = true;\n    }\n\n    //console.log(CellStart);\n    isMouseDown.current = true;\n    handleCellClick(row, col);\n  };\n  const handleMouseUp = () => {\n    isMouseDown.current = false;\n  };\n  const handleMouseOver = (row, col) => {\n    if (!isMouseDown.current) return;\n    // handleCellClick(row, col);\n    handleRactangleDraw(row, col);\n  };\n  const handleCellClick = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col] = newGrid[row][col] ? 0 : paintColor;\n    setGrid(newGrid);\n  };\n  const handleRactangleDraw = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    setGrid(newGrid);\n    console.log(row + \" is \" + CellStart.row);\n    if (row >= CellStart.row) {\n      if (col >= CellStart.collumn) {\n        for (let i = row; i >= CellStart.row; i--) {\n          for (let k = col; k >= CellStart.collumn; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      } else if (col <= CellStart.collumn) {\n        for (let i = row; i >= CellStart.row; i--) {\n          for (let k = CellStart.collumn; k >= col; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      }\n    }\n    if (row <= CellStart.row) {\n      if (col >= CellStart.collumn) {\n        for (let i = CellStart.row; i >= row; i--) {\n          for (let k = col; k >= CellStart.collumn; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      } else if (col <= CellStart.collumn) {\n        for (let i = CellStart.row; i >= row; i--) {\n          for (let k = CellStart.collumn; k >= col; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    // Fetch request to Express.js API\n    const roomInfo = {\n      roomId: roomCnt,\n      roomColor: paintColor,\n      roomName: name,\n      grid: grid\n    };\n    setRoomInfo(lastdata => [...lastdata, roomInfo]);\n  };\n  const handleNextRoom = () => {\n    console.log(grid);\n    const roomInfo = {\n      roomId: roomCnt,\n      roomColor: paintColor,\n      roomName: name\n    };\n    setRoomInfo(lastdata => [...lastdata, roomInfo]);\n    sCellsSelected.current = false;\n    setCount(roomCnt + 1);\n    const randomColor = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n    setPaintColor(randomColor);\n    setGridUpdated(false);\n  };\n  useEffect(() => {\n    console.log(roomInfromation);\n  }, [roomInfromation]);\n  const handleRoomNameChange = event => {\n    setRoomName(event.target.value);\n  };\n  const handleHouseSelectionChange = event => {\n    console.log(event.target.value);\n  };\n  useEffect(() => {\n    if (gridUpdated) {\n      fetch('/api/caregivers/:userId/houseplan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomInfromation\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n    }\n  }, [gridUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-row\",\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid-cell${cell ? ' cell-filled' : ''}`,\n            style: cell ? {\n              backgroundColor: cell\n            } : {} // Apply the paintColor as inline style\n            ,\n            onMouseDown: () => handleMouseDown(rowIndex, cellIndex),\n            onMouseOver: () => handleMouseOver(rowIndex, cellIndex)\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextRoom,\n      children: \"Next Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"roomName\",\n        onChange: handleRoomNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select House:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: houseSelection.map((house, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"houseLocation\",\n          value: `${house.pk_id}+${house.address}`,\n          onChange: handleHouseSelectionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: house.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(PlanHouse, \"3/6UoXNn8DazPgHHEOqk99hn1sU=\");\n_c = PlanHouse;\nexport default PlanHouse;\nvar _c;\n$RefreshReg$(_c, \"PlanHouse\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","numRows","numCols","PlanHouse","_s","grid","setGrid","Array","from","length","CellStart","setCellStart","name","setRoomName","roomCnt","setCount","paintColor","setPaintColor","roomInfromation","setRoomInfo","houseSelection","setHouseList","sessionData","sessionStorage","getItem","userId","JSON","parse","user_id","isMouseDown","sCellsSelected","gridUpdated","setGridUpdated","fetch","then","response","json","house","console","log","handleMouseDown","row","col","current","rowAndCell","collumn","handleCellClick","handleMouseUp","handleMouseOver","handleRactangleDraw","newGrid","stringify","i","k","handleSubmit","roomInfo","roomId","roomColor","roomName","lastdata","handleNextRoom","randomColor","Math","floor","random","handleRoomNameChange","event","target","value","handleHouseSelectionChange","method","headers","body","data","catch","error","className","children","onMouseUp","map","rowIndex","cell","cellIndex","style","backgroundColor","onMouseDown","onMouseOver","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","onChange","index","pk_id","address","_c","$RefreshReg$"],"sources":["C:/Users/Pacu/Desktop/f/ElderCare/reactfront/src/components/PlanHouse.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../CSS/planhouse.css';\r\n\r\nconst numRows = 30;\r\nconst numCols = 30;\r\n\r\nfunction PlanHouse() {\r\n  const [grid, setGrid] = useState(() => {\r\n    return Array.from({ length: numRows }, () => Array.from({ length: numCols }, () => 0));\r\n  });\r\n  const [CellStart, setCellStart] = useState({});\r\n  const [name, setRoomName] = useState('');\r\n  const [roomCnt, setCount] = useState(0);\r\n  const [paintColor, setPaintColor] = useState('rgba(0, 0, 255, 0.5)'); // Initialize with a default color\r\n  const [roomInfromation, setRoomInfo] = useState([]);\r\n  const [houseSelection, setHouseList] = useState([{}]);\r\n  const sessionData = sessionStorage.getItem(\"UserSession\");\r\n  const userId = JSON.parse(sessionData).user_id;\r\n  const isMouseDown = useRef(false);\r\n  const sCellsSelected = useRef(false);\r\n  const [gridUpdated, setGridUpdated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch(`/api/caregivers/${userId}/house-list-for-planner`)\r\n    .then(response => response.json())\r\n    .then(house => {\r\n      setHouseList(house);\r\n      console.log(houseSelection); // Do something with the retrieved car list\r\n    })\r\n  }, []);\r\n\r\n\r\n  const handleMouseDown = (row, col) => {\r\n\r\n    if(sCellsSelected.current === false)\r\n    {\r\n        const rowAndCell = {\r\n            row: row,\r\n            collumn: col,\r\n          };\r\n    \r\n        setCellStart(rowAndCell);\r\n        sCellsSelected.current = true;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    //console.log(CellStart);\r\n    isMouseDown.current = true;\r\n    handleCellClick(row, col);\r\n\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isMouseDown.current = false;\r\n  };\r\n\r\n  const handleMouseOver = (row, col) => {\r\n    if (!isMouseDown.current) return;\r\n   // handleCellClick(row, col);\r\n   handleRactangleDraw(row, col);\r\n\r\n  };\r\n\r\n  const handleCellClick = (row, col) => {\r\n    const newGrid = JSON.parse(JSON.stringify(grid));\r\n    newGrid[row][col] = newGrid[row][col] ? 0 : paintColor;\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const handleRactangleDraw = (row, col) => {\r\n    const newGrid = JSON.parse(JSON.stringify(grid));\r\n    \r\n    setGrid(newGrid);\r\n    \r\n    console.log(row + \" is \" + CellStart.row);\r\n    if(row >= CellStart.row)\r\n    {\r\n      if(col >= CellStart.collumn)\r\n      {\r\n        for(let i = row; i >= CellStart.row; i--)\r\n        {\r\n            \r\n            for(let k = col; k >= CellStart.collumn; k--)\r\n            {\r\n                newGrid[i][k] = paintColor;\r\n            }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n      else if(col <= CellStart.collumn)\r\n      {\r\n        for(let i = row; i >= CellStart.row; i--)\r\n        {\r\n            \r\n            for(let k = CellStart.collumn; k >= col; k--)\r\n            {\r\n                newGrid[i][k] = paintColor;\r\n            }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n    }\r\n    if(row <= CellStart.row)\r\n    {\r\n      if(col >= CellStart.collumn)\r\n      {\r\n        for(let i = CellStart.row; i >= row; i--)\r\n        {\r\n            \r\n          for(let k = col; k >= CellStart.collumn; k--)\r\n          {\r\n                newGrid[i][k] = paintColor;\r\n          }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n      else if(col <= CellStart.collumn)\r\n      {\r\n        for(let i = CellStart.row; i >= row; i--)\r\n        {\r\n            \r\n          for(let k = CellStart.collumn; k >= col; k--)\r\n          {\r\n                newGrid[i][k] = paintColor;\r\n          }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n    }\r\n\r\n  };\r\n  const handleSubmit = () => {\r\n        // Fetch request to Express.js API\r\n        const roomInfo = {\r\n          roomId: roomCnt,\r\n          roomColor: paintColor,\r\n          roomName: name,\r\n          grid: grid\r\n        }\r\n        setRoomInfo((lastdata) => [\r\n          ...lastdata,\r\n          roomInfo\r\n        ]);\r\n\r\n  }\r\n\r\n  const handleNextRoom = () => {\r\n    console.log(grid);\r\n    const roomInfo = {\r\n      roomId: roomCnt,\r\n      roomColor: paintColor,\r\n      roomName: name\r\n    }\r\n    setRoomInfo((lastdata) => [\r\n      ...lastdata,\r\n      roomInfo\r\n    ]);\r\n      sCellsSelected.current = false;\r\n      setCount(roomCnt+1);\r\n      const randomColor = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\r\n    setPaintColor(randomColor);\r\n    setGridUpdated(false);\r\n\r\n  };\r\n  useEffect(() => {\r\n    console.log(roomInfromation);\r\n  }, [roomInfromation]);\r\n\r\n  const handleRoomNameChange = (event) =>{\r\n    setRoomName(event.target.value);\r\n  }\r\n  const handleHouseSelectionChange = (event) => {\r\n   console.log(event.target.value);\r\n \r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  if (gridUpdated) {\r\n    fetch('/api/caregivers/:userId/houseplan', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ roomInfromation }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.error(error));\r\n  }\r\n}, [gridUpdated]);\r\n\r\n  return (\r\n    <div className=''>\r\n      <div onMouseUp={handleMouseUp}>\r\n      <div className=\"grid\">\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid-row\">\r\n            {row.map((cell, cellIndex) => (\r\n              <div\r\n                key={cellIndex}\r\n                className={`grid-cell${cell ? ' cell-filled' : ''}`}\r\n                style={cell ? { backgroundColor: cell } : {}} // Apply the paintColor as inline style\r\n                onMouseDown={() => handleMouseDown(rowIndex, cellIndex)}\r\n                onMouseOver={() => handleMouseOver(rowIndex, cellIndex)}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n      <button onClick={handleNextRoom}>Next Room</button>\r\n      <button onClick={handleSubmit}>Submit</button>\r\n      <div>\r\n          <label>Room:</label>\r\n          <input type=\"text\" id=\"roomName\" onChange={handleRoomNameChange} />\r\n      </div>\r\n      <p>Select House:</p>\r\n            <div>\r\n            {houseSelection.map((house, index) => (\r\n                <div key={index}>\r\n                <input type=\"radio\" name=\"houseLocation\" value={`${house.pk_id}+${house.address}`} onChange={handleHouseSelectionChange} />\r\n                <label>{house.address}</label>\r\n                </div>\r\n            ))}\r\n            </div>\r\n\r\n            \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default PlanHouse;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAElB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,OAAOW,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAQ,CAAC,EAAE,MAAMM,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACxF,CAAC,CAAC;EACF,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACgB,IAAI,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,OAAO,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACtE,MAAM,CAACsB,eAAe,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAACwB,cAAc,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM0B,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;EACzD,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAACM,OAAO;EAC9C,MAAMC,WAAW,GAAGhC,MAAM,CAAC,KAAK,CAAC;EACjC,MAAMiC,cAAc,GAAGjC,MAAM,CAAC,KAAK,CAAC;EACpC,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAErDE,SAAS,CAAC,MAAM;IAEdmC,KAAK,CAAE,mBAAkBR,MAAO,yBAAwB,CAAC,CACxDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI;MACbhB,YAAY,CAACgB,KAAK,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACnB,cAAc,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMoB,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAEpC,IAAGZ,cAAc,CAACa,OAAO,KAAK,KAAK,EACnC;MACI,MAAMC,UAAU,GAAG;QACfH,GAAG,EAAEA,GAAG;QACRI,OAAO,EAAEH;MACX,CAAC;MAEH/B,YAAY,CAACiC,UAAU,CAAC;MACxBd,cAAc,CAACa,OAAO,GAAG,IAAI;IAGjC;;IAKA;IACAd,WAAW,CAACc,OAAO,GAAG,IAAI;IAC1BG,eAAe,CAACL,GAAG,EAAEC,GAAG,CAAC;EAE3B,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BlB,WAAW,CAACc,OAAO,GAAG,KAAK;EAC7B,CAAC;EAED,MAAMK,eAAe,GAAGA,CAACP,GAAG,EAAEC,GAAG,KAAK;IACpC,IAAI,CAACb,WAAW,CAACc,OAAO,EAAE;IAC3B;IACAM,mBAAmB,CAACR,GAAG,EAAEC,GAAG,CAAC;EAE9B,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACL,GAAG,EAAEC,GAAG,KAAK;IACpC,MAAMQ,OAAO,GAAGxB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,SAAS,CAAC9C,IAAI,CAAC,CAAC;IAChD6C,OAAO,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGQ,OAAO,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,GAAG1B,UAAU;IACtDV,OAAO,CAAC4C,OAAO,CAAC;EAClB,CAAC;EAED,MAAMD,mBAAmB,GAAGA,CAACR,GAAG,EAAEC,GAAG,KAAK;IACxC,MAAMQ,OAAO,GAAGxB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACyB,SAAS,CAAC9C,IAAI,CAAC,CAAC;IAEhDC,OAAO,CAAC4C,OAAO,CAAC;IAEhBZ,OAAO,CAACC,GAAG,CAACE,GAAG,GAAG,MAAM,GAAG/B,SAAS,CAAC+B,GAAG,CAAC;IACzC,IAAGA,GAAG,IAAI/B,SAAS,CAAC+B,GAAG,EACvB;MACE,IAAGC,GAAG,IAAIhC,SAAS,CAACmC,OAAO,EAC3B;QACE,KAAI,IAAIO,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAI1C,SAAS,CAAC+B,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEI,KAAI,IAAIC,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAI3C,SAAS,CAACmC,OAAO,EAAEQ,CAAC,EAAE,EAC5C;YACIH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGrC,UAAU;UAC9B;QACJ;QACAV,OAAO,CAAC4C,OAAO,CAAC;MAClB,CAAC,MACI,IAAGR,GAAG,IAAIhC,SAAS,CAACmC,OAAO,EAChC;QACE,KAAI,IAAIO,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAI1C,SAAS,CAAC+B,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEI,KAAI,IAAIC,CAAC,GAAG3C,SAAS,CAACmC,OAAO,EAAEQ,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EAC5C;YACIH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGrC,UAAU;UAC9B;QACJ;QACAV,OAAO,CAAC4C,OAAO,CAAC;MAClB;IACF;IACA,IAAGT,GAAG,IAAI/B,SAAS,CAAC+B,GAAG,EACvB;MACE,IAAGC,GAAG,IAAIhC,SAAS,CAACmC,OAAO,EAC3B;QACE,KAAI,IAAIO,CAAC,GAAG1C,SAAS,CAAC+B,GAAG,EAAEW,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEE,KAAI,IAAIC,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAI3C,SAAS,CAACmC,OAAO,EAAEQ,CAAC,EAAE,EAC5C;YACMH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGrC,UAAU;UAChC;QACF;QACAV,OAAO,CAAC4C,OAAO,CAAC;MAClB,CAAC,MACI,IAAGR,GAAG,IAAIhC,SAAS,CAACmC,OAAO,EAChC;QACE,KAAI,IAAIO,CAAC,GAAG1C,SAAS,CAAC+B,GAAG,EAAEW,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEE,KAAI,IAAIC,CAAC,GAAG3C,SAAS,CAACmC,OAAO,EAAEQ,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EAC5C;YACMH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGrC,UAAU;UAChC;QACF;QACAV,OAAO,CAAC4C,OAAO,CAAC;MAClB;IACF;EAEF,CAAC;EACD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACrB;IACA,MAAMC,QAAQ,GAAG;MACfC,MAAM,EAAE1C,OAAO;MACf2C,SAAS,EAAEzC,UAAU;MACrB0C,QAAQ,EAAE9C,IAAI;MACdP,IAAI,EAAEA;IACR,CAAC;IACDc,WAAW,CAAEwC,QAAQ,IAAK,CACxB,GAAGA,QAAQ,EACXJ,QAAQ,CACT,CAAC;EAER,CAAC;EAED,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3BtB,OAAO,CAACC,GAAG,CAAClC,IAAI,CAAC;IACjB,MAAMkD,QAAQ,GAAG;MACfC,MAAM,EAAE1C,OAAO;MACf2C,SAAS,EAAEzC,UAAU;MACrB0C,QAAQ,EAAE9C;IACZ,CAAC;IACDO,WAAW,CAAEwC,QAAQ,IAAK,CACxB,GAAGA,QAAQ,EACXJ,QAAQ,CACT,CAAC;IACAzB,cAAc,CAACa,OAAO,GAAG,KAAK;IAC9B5B,QAAQ,CAACD,OAAO,GAAC,CAAC,CAAC;IACnB,MAAM+C,WAAW,GAAI,QAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,QAAO;IAC7I/C,aAAa,CAAC4C,WAAW,CAAC;IAC1B7B,cAAc,CAAC,KAAK,CAAC;EAEvB,CAAC;EACDlC,SAAS,CAAC,MAAM;IACdwC,OAAO,CAACC,GAAG,CAACrB,eAAe,CAAC;EAC9B,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAM+C,oBAAoB,GAAIC,KAAK,IAAI;IACrCrD,WAAW,CAACqD,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,0BAA0B,GAAIH,KAAK,IAAK;IAC7C5B,OAAO,CAACC,GAAG,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAElC,CAAC;EAGDtE,SAAS,CAAC,MAAM;IACd,IAAIiC,WAAW,EAAE;MACfE,KAAK,CAAC,mCAAmC,EAAE;QACzCqC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAE9C,IAAI,CAACyB,SAAS,CAAC;UAAEjC;QAAgB,CAAC;MAC1C,CAAC,CAAC,CACCgB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEuC,IAAI,IAAKnC,OAAO,CAACC,GAAG,CAACkC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKrC,OAAO,CAACqC,KAAK,CAACA,KAAK,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,CAAC5C,WAAW,CAAC,CAAC;EAEf,oBACE/B,OAAA;IAAK4E,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACf7E,OAAA;MAAK8E,SAAS,EAAE/B,aAAc;MAAA8B,QAAA,eAC9B7E,OAAA;QAAK4E,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClBxE,IAAI,CAAC0E,GAAG,CAAC,CAACtC,GAAG,EAAEuC,QAAQ,kBACtBhF,OAAA;UAAoB4E,SAAS,EAAC,UAAU;UAAAC,QAAA,EACrCpC,GAAG,CAACsC,GAAG,CAAC,CAACE,IAAI,EAAEC,SAAS,kBACvBlF,OAAA;YAEE4E,SAAS,EAAG,YAAWK,IAAI,GAAG,cAAc,GAAG,EAAG,EAAE;YACpDE,KAAK,EAAEF,IAAI,GAAG;cAAEG,eAAe,EAAEH;YAAK,CAAC,GAAG,CAAC,CAAE,CAAC;YAAA;YAC9CI,WAAW,EAAEA,CAAA,KAAM7C,eAAe,CAACwC,QAAQ,EAAEE,SAAS,CAAE;YACxDI,WAAW,EAAEA,CAAA,KAAMtC,eAAe,CAACgC,QAAQ,EAAEE,SAAS;UAAE,GAJnDA,SAAS;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAMjB;QAAC,GATMV,QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAWnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACJ1F,OAAA;MAAQ2F,OAAO,EAAE/B,cAAe;MAAAiB,QAAA,EAAC;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACnD1F,OAAA;MAAQ2F,OAAO,EAAErC,YAAa;MAAAuB,QAAA,EAAC;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC9C1F,OAAA;MAAA6E,QAAA,gBACI7E,OAAA;QAAA6E,QAAA,EAAO;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpB1F,OAAA;QAAO4F,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,UAAU;QAACC,QAAQ,EAAE7B;MAAqB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjE,eACN1F,OAAA;MAAA6E,QAAA,EAAG;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACd1F,OAAA;MAAA6E,QAAA,EACCzD,cAAc,CAAC2D,GAAG,CAAC,CAAC1C,KAAK,EAAE0D,KAAK,kBAC7B/F,OAAA;QAAA6E,QAAA,gBACA7E,OAAA;UAAO4F,IAAI,EAAC,OAAO;UAAChF,IAAI,EAAC,eAAe;UAACwD,KAAK,EAAG,GAAE/B,KAAK,CAAC2D,KAAM,IAAG3D,KAAK,CAAC4D,OAAQ,EAAE;UAACH,QAAQ,EAAEzB;QAA2B;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3H1F,OAAA;UAAA6E,QAAA,EAAQxC,KAAK,CAAC4D;QAAO;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GAFpBK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAIlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGR;AAGV;AAACtF,EAAA,CApOQD,SAAS;AAAA+F,EAAA,GAAT/F,SAAS;AAsOlB,eAAeA,SAAS;AAAC,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}