{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pacu\\\\Desktop\\\\f\\\\ElderCare\\\\reactfront\\\\src\\\\components\\\\PlanHouse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../CSS/planhouse.css';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst numRows = 30;\nconst numCols = 30;\nfunction PlanHouse() {\n  _s();\n  const [grid, setGrid] = useState(() => {\n    return Array.from({\n      length: numRows\n    }, () => Array.from({\n      length: numCols\n    }, () => 0));\n  });\n  const [CellStart, setCellStart] = useState({});\n  const [name, setRoomName] = useState('');\n  const [roomCnt, setCount] = useState(0);\n  const [paintColor, setPaintColor] = useState('rgba(0, 0, 255, 0.5)'); // Initialize with a default color\n  const [roomInfromation, setRoomInfo] = useState([]);\n  const [houseSelection, setHouseList] = useState([{}]);\n  const sessionData = sessionStorage.getItem(\"UserSession\");\n  const userId = JSON.parse(sessionData).user_id;\n  const isMouseDown = useRef(false);\n  const sCellsSelected = useRef(false);\n  const [gridUpdated, setGridUpdated] = useState(false);\n  const [whichhouse, setWhichhouse] = useState({});\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    fetch(`/api/caregivers/${userId}/house-list-for-planner`).then(response => response.json()).then(house => {\n      setHouseList(house);\n      console.log(houseSelection); // Do something with the retrieved car list\n    });\n  }, []);\n  const handleMouseDown = (row, col) => {\n    if (sCellsSelected.current === false) {\n      const rowAndCell = {\n        row: row,\n        collumn: col\n      };\n      setCellStart(rowAndCell);\n      sCellsSelected.current = true;\n    }\n\n    //console.log(CellStart);\n    isMouseDown.current = true;\n    handleCellClick(row, col);\n  };\n  const handleMouseUp = () => {\n    sCellsSelected.current = false;\n    isMouseDown.current = false;\n  };\n  const handleMouseOver = (row, col) => {\n    if (!isMouseDown.current) return;\n    // handleCellClick(row, col);\n    handleRactangleDraw(row, col);\n  };\n  const handleCellClick = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col] = newGrid[row][col] ? 0 : paintColor;\n    setGrid(newGrid);\n  };\n  const handleRactangleDraw = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    setGrid(newGrid);\n    console.log(row + \" is \" + CellStart.row);\n    if (row >= CellStart.row) {\n      if (col >= CellStart.collumn) {\n        for (let i = row; i >= CellStart.row; i--) {\n          for (let k = col; k >= CellStart.collumn; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      } else if (col <= CellStart.collumn) {\n        for (let i = row; i >= CellStart.row; i--) {\n          for (let k = CellStart.collumn; k >= col; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      }\n    }\n    if (row <= CellStart.row) {\n      if (col >= CellStart.collumn) {\n        for (let i = CellStart.row; i >= row; i--) {\n          for (let k = col; k >= CellStart.collumn; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      } else if (col <= CellStart.collumn) {\n        for (let i = CellStart.row; i >= row; i--) {\n          for (let k = CellStart.collumn; k >= col; k--) {\n            newGrid[i][k] = paintColor;\n          }\n        }\n        setGrid(newGrid);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    if (roomCnt === 0) {\n      setError('Plan must contain atleast one room');\n      return;\n    } else if (!whichhouse.id) {\n      setError('You need to select the address');\n      return;\n    }\n    setError(null);\n    const roomInfo = {\n      roomId: roomCnt,\n      roomColor: paintColor,\n      roomName: name,\n      grid: grid,\n      pkIdHouse: whichhouse.id\n    };\n    setRoomInfo(lastdata => [...lastdata, roomInfo]);\n    setGridUpdated(true);\n  };\n  const handleNextRoom = () => {\n    if (!name) {\n      setError('Room name cannot be empty');\n      return;\n    }\n    setError(null);\n    setSuccessMessage('Room successfully created');\n    console.log(grid);\n    const roomInfo = {\n      roomId: roomCnt,\n      roomColor: paintColor,\n      roomName: name\n    };\n    setRoomInfo(lastdata => [...lastdata, roomInfo]);\n    sCellsSelected.current = false;\n    setCount(roomCnt + 1);\n    const randomColor = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n    setPaintColor(randomColor);\n    setGridUpdated(false);\n    setRoomName('');\n  };\n  useEffect(() => {\n    console.log(roomInfromation);\n  }, [roomInfromation]);\n  const handleRoomNameChange = event => {\n    setRoomName(event.target.value);\n  };\n  const handleHouseSelectionChange = event => {\n    const parts = event.target.value.split(\"+\");\n    console.log(parts[0]);\n    setWhichhouse({\n      id: parts[0],\n      selected: true\n    });\n  };\n  useEffect(() => {\n    if (gridUpdated) {\n      fetch('/api/caregivers/:userId/houseplan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomInfromation\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n    }\n    setGridUpdated(false);\n  }, [roomInfromation, gridUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-planner\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"planner-header\",\n      children: \"Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"house-planner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseUp: handleMouseUp,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-row\",\n            children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `grid-cell${cell ? ' cell-filled' : ''}`,\n              style: cell ? {\n                backgroundColor: cell\n              } : {},\n              onMouseDown: () => handleMouseDown(rowIndex, cellIndex),\n              onMouseOver: () => handleMouseOver(rowIndex, cellIndex)\n            }, cellIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), houseSelection.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planner-elements\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"planner-next\",\n            onClick: handleNextRoom,\n            children: \"Next Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"planner-submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Room:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"roomName\",\n              onChange: handleRoomNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 23\n          }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success-message\",\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select House:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: houseSelection.map((house, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"houseLocation\",\n                value: `${house.pk_id}+${house.address}`,\n                onChange: handleHouseSelectionChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: house.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All your location has plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s(PlanHouse, \"13G3OK+1srddbDbX515WtdaFWo8=\");\n_c = PlanHouse;\nexport default PlanHouse;\nvar _c;\n$RefreshReg$(_c, \"PlanHouse\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","numRows","numCols","PlanHouse","_s","grid","setGrid","Array","from","length","CellStart","setCellStart","name","setRoomName","roomCnt","setCount","paintColor","setPaintColor","roomInfromation","setRoomInfo","houseSelection","setHouseList","sessionData","sessionStorage","getItem","userId","JSON","parse","user_id","isMouseDown","sCellsSelected","gridUpdated","setGridUpdated","whichhouse","setWhichhouse","error","setError","successMessage","setSuccessMessage","fetch","then","response","json","house","console","log","handleMouseDown","row","col","current","rowAndCell","collumn","handleCellClick","handleMouseUp","handleMouseOver","handleRactangleDraw","newGrid","stringify","i","k","handleSubmit","id","roomInfo","roomId","roomColor","roomName","pkIdHouse","lastdata","handleNextRoom","randomColor","Math","floor","random","handleRoomNameChange","event","target","value","handleHouseSelectionChange","parts","split","selected","method","headers","body","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseUp","map","rowIndex","cell","cellIndex","style","backgroundColor","onMouseDown","onMouseOver","onClick","type","onChange","index","pk_id","address","_c","$RefreshReg$"],"sources":["C:/Users/Pacu/Desktop/f/ElderCare/reactfront/src/components/PlanHouse.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport '../CSS/planhouse.css';\r\nimport Header from './Header';\r\n\r\nconst numRows = 30;\r\nconst numCols = 30;\r\n\r\nfunction PlanHouse() {\r\n  const [grid, setGrid] = useState(() => {\r\n    return Array.from({ length: numRows }, () => Array.from({ length: numCols }, () => 0));\r\n  });\r\n  const [CellStart, setCellStart] = useState({});\r\n  const [name, setRoomName] = useState('');\r\n  const [roomCnt, setCount] = useState(0);\r\n  const [paintColor, setPaintColor] = useState('rgba(0, 0, 255, 0.5)'); // Initialize with a default color\r\n  const [roomInfromation, setRoomInfo] = useState([]);\r\n  const [houseSelection, setHouseList] = useState([{}]);\r\n  const sessionData = sessionStorage.getItem(\"UserSession\");\r\n  const userId = JSON.parse(sessionData).user_id;\r\n  const isMouseDown = useRef(false);\r\n  const sCellsSelected = useRef(false);\r\n  const [gridUpdated, setGridUpdated] = useState(false);\r\n  const [whichhouse, setWhichhouse] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  useEffect(() => {\r\n    \r\n    fetch(`/api/caregivers/${userId}/house-list-for-planner`)\r\n    .then(response => response.json())\r\n    .then(house => {\r\n      setHouseList(house);\r\n      console.log(houseSelection); // Do something with the retrieved car list\r\n    })\r\n  }, []);\r\n\r\n\r\n  const handleMouseDown = (row, col) => {\r\n\r\n    if(sCellsSelected.current === false)\r\n    {\r\n        const rowAndCell = {\r\n            row: row,\r\n            collumn: col,\r\n          };\r\n    \r\n        setCellStart(rowAndCell);\r\n        sCellsSelected.current = true;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    //console.log(CellStart);\r\n    isMouseDown.current = true;\r\n    handleCellClick(row, col);\r\n\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    sCellsSelected.current = false;\r\n    isMouseDown.current = false;\r\n  };\r\n\r\n  const handleMouseOver = (row, col) => {\r\n    if (!isMouseDown.current) return;\r\n   // handleCellClick(row, col);\r\n   handleRactangleDraw(row, col);\r\n\r\n  };\r\n\r\n  const handleCellClick = (row, col) => {\r\n    const newGrid = JSON.parse(JSON.stringify(grid));\r\n    newGrid[row][col] = newGrid[row][col] ? 0 : paintColor;\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const handleRactangleDraw = (row, col) => {\r\n    const newGrid = JSON.parse(JSON.stringify(grid));\r\n    \r\n    setGrid(newGrid);\r\n    \r\n    console.log(row + \" is \" + CellStart.row);\r\n    if(row >= CellStart.row)\r\n    {\r\n      if(col >= CellStart.collumn)\r\n      {\r\n        for(let i = row; i >= CellStart.row; i--)\r\n        {\r\n            \r\n            for(let k = col; k >= CellStart.collumn; k--)\r\n            {\r\n                newGrid[i][k] = paintColor;\r\n            }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n      else if(col <= CellStart.collumn)\r\n      {\r\n        for(let i = row; i >= CellStart.row; i--)\r\n        {\r\n            \r\n            for(let k = CellStart.collumn; k >= col; k--)\r\n            {\r\n                newGrid[i][k] = paintColor;\r\n            }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n    }\r\n    if(row <= CellStart.row)\r\n    {\r\n      if(col >= CellStart.collumn)\r\n      {\r\n        for(let i = CellStart.row; i >= row; i--)\r\n        {\r\n            \r\n          for(let k = col; k >= CellStart.collumn; k--)\r\n          {\r\n                newGrid[i][k] = paintColor;\r\n          }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n      else if(col <= CellStart.collumn)\r\n      {\r\n        for(let i = CellStart.row; i >= row; i--)\r\n        {\r\n            \r\n          for(let k = CellStart.collumn; k >= col; k--)\r\n          {\r\n                newGrid[i][k] = paintColor;\r\n          }\r\n        }\r\n        setGrid(newGrid);\r\n      }\r\n    }\r\n\r\n  };\r\n  const handleSubmit = () => {\r\n    if (roomCnt === 0) {\r\n      setError('Plan must contain atleast one room');\r\n      return;\r\n    }\r\n    else if (!whichhouse.id) {\r\n      setError('You need to select the address');\r\n      return;\r\n    }\r\n  \r\n    setError(null); \r\n    \r\n        const roomInfo = {\r\n          roomId: roomCnt,\r\n          roomColor: paintColor,\r\n          roomName: name,\r\n          grid: grid,\r\n          pkIdHouse: whichhouse.id\r\n        }\r\n        setRoomInfo((lastdata) => [\r\n          ...lastdata,\r\n          roomInfo\r\n        ]);\r\n\r\n        setGridUpdated(true);\r\n  }\r\n\r\n  const handleNextRoom = () => {\r\n\r\n    if (!name) {\r\n      setError('Room name cannot be empty');\r\n      return;\r\n    }\r\n  \r\n    setError(null); \r\n    setSuccessMessage('Room successfully created'); \r\n\r\n    console.log(grid);\r\n    const roomInfo = {\r\n      roomId: roomCnt,\r\n      roomColor: paintColor,\r\n      roomName: name\r\n    }\r\n    setRoomInfo((lastdata) => [\r\n      ...lastdata,\r\n      roomInfo\r\n    ]);\r\n      sCellsSelected.current = false;\r\n      setCount(roomCnt+1);\r\n      const randomColor = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\r\n    setPaintColor(randomColor);\r\n    setGridUpdated(false);\r\n    setRoomName('');\r\n  };\r\n  useEffect(() => {\r\n    console.log(roomInfromation);\r\n  }, [roomInfromation]);\r\n\r\n  const handleRoomNameChange = (event) =>{\r\n    setRoomName(event.target.value);\r\n  }\r\n  const handleHouseSelectionChange = (event) => {\r\n   \r\n   const parts = event.target.value.split(\"+\")\r\n   console.log(parts[0]);\r\n   setWhichhouse({\r\n    id: parts[0],\r\n    selected: true\r\n  })\r\n \r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  if (gridUpdated) {\r\n    fetch('/api/caregivers/:userId/houseplan', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ roomInfromation }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.error(error));\r\n  }\r\n  setGridUpdated(false);\r\n}, [roomInfromation, gridUpdated]);\r\n\r\n  return (\r\n    <div className='background-planner'>\r\n          <Header />\r\n          <h1 className='planner-header'>Planner</h1>\r\n      <div className='house-planner-container'>\r\n      <div onMouseUp={handleMouseUp}>\r\n      <div className=\"grid\">\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid-row\">\r\n            {row.map((cell, cellIndex) => (\r\n              <div\r\n                key={cellIndex}\r\n                className={`grid-cell${cell ? ' cell-filled' : ''}`}\r\n                style={cell ? { backgroundColor: cell } : {}} \r\n                onMouseDown={() => handleMouseDown(rowIndex, cellIndex)}\r\n                onMouseOver={() => handleMouseOver(rowIndex, cellIndex)}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n        {houseSelection.length > 0 ? (\r\n          <>\r\n            <div className='planner-elements'>\r\n            <button className='planner-next' onClick={handleNextRoom}>Next Room</button>\r\n            <button className='planner-submit' onClick={handleSubmit}>Submit</button>\r\n            <div>\r\n                <label>Room:</label>\r\n                <input type=\"text\" id=\"roomName\" onChange={handleRoomNameChange} />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n            <p>Select House:</p>\r\n            <div>\r\n              {houseSelection.map((house, index) => (\r\n                  <div key={index}>\r\n                  <input type=\"radio\" name=\"houseLocation\" value={`${house.pk_id}+${house.address}`} onChange={handleHouseSelectionChange} />\r\n                  <label>{house.address}</label>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>All your location has plans</p>\r\n        )}\r\n      </div>  \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default PlanHouse;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAElB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACrC,OAAOc,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER;IAAQ,CAAC,EAAE,MAAMM,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEP;IAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EACxF,CAAC,CAAC;EACF,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACmB,IAAI,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,OAAO,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACtE,MAAM,CAACyB,eAAe,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAM,CAAC2B,cAAc,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM6B,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;EACzD,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAACM,OAAO;EAC9C,MAAMC,WAAW,GAAGnC,MAAM,CAAC,KAAK,CAAC;EACjC,MAAMoC,cAAc,GAAGpC,MAAM,CAAC,KAAK,CAAC;EACpC,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC0C,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAC1DE,SAAS,CAAC,MAAM;IAEd4C,KAAK,CAAE,mBAAkBd,MAAO,yBAAwB,CAAC,CACxDe,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI;MACbtB,YAAY,CAACsB,KAAK,CAAC;MACnBC,OAAO,CAACC,GAAG,CAACzB,cAAc,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM0B,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAEpC,IAAGlB,cAAc,CAACmB,OAAO,KAAK,KAAK,EACnC;MACI,MAAMC,UAAU,GAAG;QACfH,GAAG,EAAEA,GAAG;QACRI,OAAO,EAAEH;MACX,CAAC;MAEHrC,YAAY,CAACuC,UAAU,CAAC;MACxBpB,cAAc,CAACmB,OAAO,GAAG,IAAI;IAGjC;;IAKA;IACApB,WAAW,CAACoB,OAAO,GAAG,IAAI;IAC1BG,eAAe,CAACL,GAAG,EAAEC,GAAG,CAAC;EAE3B,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BvB,cAAc,CAACmB,OAAO,GAAG,KAAK;IAC9BpB,WAAW,CAACoB,OAAO,GAAG,KAAK;EAC7B,CAAC;EAED,MAAMK,eAAe,GAAGA,CAACP,GAAG,EAAEC,GAAG,KAAK;IACpC,IAAI,CAACnB,WAAW,CAACoB,OAAO,EAAE;IAC3B;IACAM,mBAAmB,CAACR,GAAG,EAAEC,GAAG,CAAC;EAE9B,CAAC;EAED,MAAMI,eAAe,GAAGA,CAACL,GAAG,EAAEC,GAAG,KAAK;IACpC,MAAMQ,OAAO,GAAG9B,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC+B,SAAS,CAACpD,IAAI,CAAC,CAAC;IAChDmD,OAAO,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGQ,OAAO,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC,GAAGhC,UAAU;IACtDV,OAAO,CAACkD,OAAO,CAAC;EAClB,CAAC;EAED,MAAMD,mBAAmB,GAAGA,CAACR,GAAG,EAAEC,GAAG,KAAK;IACxC,MAAMQ,OAAO,GAAG9B,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC+B,SAAS,CAACpD,IAAI,CAAC,CAAC;IAEhDC,OAAO,CAACkD,OAAO,CAAC;IAEhBZ,OAAO,CAACC,GAAG,CAACE,GAAG,GAAG,MAAM,GAAGrC,SAAS,CAACqC,GAAG,CAAC;IACzC,IAAGA,GAAG,IAAIrC,SAAS,CAACqC,GAAG,EACvB;MACE,IAAGC,GAAG,IAAItC,SAAS,CAACyC,OAAO,EAC3B;QACE,KAAI,IAAIO,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAIhD,SAAS,CAACqC,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEI,KAAI,IAAIC,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAIjD,SAAS,CAACyC,OAAO,EAAEQ,CAAC,EAAE,EAC5C;YACIH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG3C,UAAU;UAC9B;QACJ;QACAV,OAAO,CAACkD,OAAO,CAAC;MAClB,CAAC,MACI,IAAGR,GAAG,IAAItC,SAAS,CAACyC,OAAO,EAChC;QACE,KAAI,IAAIO,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAIhD,SAAS,CAACqC,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEI,KAAI,IAAIC,CAAC,GAAGjD,SAAS,CAACyC,OAAO,EAAEQ,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EAC5C;YACIH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG3C,UAAU;UAC9B;QACJ;QACAV,OAAO,CAACkD,OAAO,CAAC;MAClB;IACF;IACA,IAAGT,GAAG,IAAIrC,SAAS,CAACqC,GAAG,EACvB;MACE,IAAGC,GAAG,IAAItC,SAAS,CAACyC,OAAO,EAC3B;QACE,KAAI,IAAIO,CAAC,GAAGhD,SAAS,CAACqC,GAAG,EAAEW,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEE,KAAI,IAAIC,CAAC,GAAGX,GAAG,EAAEW,CAAC,IAAIjD,SAAS,CAACyC,OAAO,EAAEQ,CAAC,EAAE,EAC5C;YACMH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG3C,UAAU;UAChC;QACF;QACAV,OAAO,CAACkD,OAAO,CAAC;MAClB,CAAC,MACI,IAAGR,GAAG,IAAItC,SAAS,CAACyC,OAAO,EAChC;QACE,KAAI,IAAIO,CAAC,GAAGhD,SAAS,CAACqC,GAAG,EAAEW,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EACxC;UAEE,KAAI,IAAIC,CAAC,GAAGjD,SAAS,CAACyC,OAAO,EAAEQ,CAAC,IAAIX,GAAG,EAAEW,CAAC,EAAE,EAC5C;YACMH,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG3C,UAAU;UAChC;QACF;QACAV,OAAO,CAACkD,OAAO,CAAC;MAClB;IACF;EAEF,CAAC;EACD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI9C,OAAO,KAAK,CAAC,EAAE;MACjBsB,QAAQ,CAAC,oCAAoC,CAAC;MAC9C;IACF,CAAC,MACI,IAAI,CAACH,UAAU,CAAC4B,EAAE,EAAE;MACvBzB,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACF;IAEAA,QAAQ,CAAC,IAAI,CAAC;IAEV,MAAM0B,QAAQ,GAAG;MACfC,MAAM,EAAEjD,OAAO;MACfkD,SAAS,EAAEhD,UAAU;MACrBiD,QAAQ,EAAErD,IAAI;MACdP,IAAI,EAAEA,IAAI;MACV6D,SAAS,EAAEjC,UAAU,CAAC4B;IACxB,CAAC;IACD1C,WAAW,CAAEgD,QAAQ,IAAK,CACxB,GAAGA,QAAQ,EACXL,QAAQ,CACT,CAAC;IAEF9B,cAAc,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMoC,cAAc,GAAGA,CAAA,KAAM;IAE3B,IAAI,CAACxD,IAAI,EAAE;MACTwB,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IAEAA,QAAQ,CAAC,IAAI,CAAC;IACdE,iBAAiB,CAAC,2BAA2B,CAAC;IAE9CM,OAAO,CAACC,GAAG,CAACxC,IAAI,CAAC;IACjB,MAAMyD,QAAQ,GAAG;MACfC,MAAM,EAAEjD,OAAO;MACfkD,SAAS,EAAEhD,UAAU;MACrBiD,QAAQ,EAAErD;IACZ,CAAC;IACDO,WAAW,CAAEgD,QAAQ,IAAK,CACxB,GAAGA,QAAQ,EACXL,QAAQ,CACT,CAAC;IACAhC,cAAc,CAACmB,OAAO,GAAG,KAAK;IAC9BlC,QAAQ,CAACD,OAAO,GAAC,CAAC,CAAC;IACnB,MAAMuD,WAAW,GAAI,QAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,KAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE,QAAO;IAC7IvD,aAAa,CAACoD,WAAW,CAAC;IAC1BrC,cAAc,CAAC,KAAK,CAAC;IACrBnB,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EACDlB,SAAS,CAAC,MAAM;IACdiD,OAAO,CAACC,GAAG,CAAC3B,eAAe,CAAC;EAC9B,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMuD,oBAAoB,GAAIC,KAAK,IAAI;IACrC7D,WAAW,CAAC6D,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,0BAA0B,GAAIH,KAAK,IAAK;IAE7C,MAAMI,KAAK,GAAGJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3CnC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB5C,aAAa,CAAC;MACb2B,EAAE,EAAEiB,KAAK,CAAC,CAAC,CAAC;MACZE,QAAQ,EAAE;IACZ,CAAC,CAAC;EAEJ,CAAC;EAGDrF,SAAS,CAAC,MAAM;IACd,IAAIoC,WAAW,EAAE;MACfQ,KAAK,CAAC,mCAAmC,EAAE;QACzC0C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEzD,IAAI,CAAC+B,SAAS,CAAC;UAAEvC;QAAgB,CAAC;MAC1C,CAAC,CAAC,CACCsB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAE4C,IAAI,IAAKxC,OAAO,CAACC,GAAG,CAACuC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAElD,KAAK,IAAKS,OAAO,CAACT,KAAK,CAACA,KAAK,CAAC,CAAC;IAC3C;IACAH,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACd,eAAe,EAAEa,WAAW,CAAC,CAAC;EAEhC,oBACEjC,OAAA;IAAKwF,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC7BzF,OAAA,CAACF,MAAM;MAAA4F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACV7F,OAAA;MAAIwF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC/C7F,OAAA;MAAKwF,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACxCzF,OAAA;QAAK8F,SAAS,EAAEvC,aAAc;QAAAkC,QAAA,eAC9BzF,OAAA;UAAKwF,SAAS,EAAC,MAAM;UAAAC,QAAA,EAClBlF,IAAI,CAACwF,GAAG,CAAC,CAAC9C,GAAG,EAAE+C,QAAQ,kBACtBhG,OAAA;YAAoBwF,SAAS,EAAC,UAAU;YAAAC,QAAA,EACrCxC,GAAG,CAAC8C,GAAG,CAAC,CAACE,IAAI,EAAEC,SAAS,kBACvBlG,OAAA;cAEEwF,SAAS,EAAG,YAAWS,IAAI,GAAG,cAAc,GAAG,EAAG,EAAE;cACpDE,KAAK,EAAEF,IAAI,GAAG;gBAAEG,eAAe,EAAEH;cAAK,CAAC,GAAG,CAAC,CAAE;cAC7CI,WAAW,EAAEA,CAAA,KAAMrD,eAAe,CAACgD,QAAQ,EAAEE,SAAS,CAAE;cACxDI,WAAW,EAAEA,CAAA,KAAM9C,eAAe,CAACwC,QAAQ,EAAEE,SAAS;YAAE,GAJnDA,SAAS;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAMjB;UAAC,GATMG,QAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAWnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,EACDvE,cAAc,CAACX,MAAM,GAAG,CAAC,gBACxBX,OAAA,CAAAE,SAAA;QAAAuF,QAAA,eACEzF,OAAA;UAAKwF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBACjCzF,OAAA;YAAQwF,SAAS,EAAC,cAAc;YAACe,OAAO,EAAEjC,cAAe;YAAAmB,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eAC5E7F,OAAA;YAAQwF,SAAS,EAAC,gBAAgB;YAACe,OAAO,EAAEzC,YAAa;YAAA2B,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS,eACzE7F,OAAA;YAAAyF,QAAA,gBACIzF,OAAA;cAAAyF,QAAA,EAAO;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAQ,eACpB7F,OAAA;cAAOwG,IAAI,EAAC,MAAM;cAACzC,EAAE,EAAC,UAAU;cAAC0C,QAAQ,EAAE9B;YAAqB;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACjE,EACLxD,KAAK,iBAAIrC,OAAA;YAAGwF,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEpD;UAAK;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,EACjDtD,cAAc,iBAAIvC,OAAA;YAAGwF,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAElD;UAAc;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACtE7F,OAAA;YAAAyF,QAAA,EAAG;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,eACpB7F,OAAA;YAAAyF,QAAA,EACGnE,cAAc,CAACyE,GAAG,CAAC,CAAClD,KAAK,EAAE6D,KAAK,kBAC7B1G,OAAA;cAAAyF,QAAA,gBACAzF,OAAA;gBAAOwG,IAAI,EAAC,OAAO;gBAAC1F,IAAI,EAAC,eAAe;gBAACgE,KAAK,EAAG,GAAEjC,KAAK,CAAC8D,KAAM,IAAG9D,KAAK,CAAC+D,OAAQ,EAAE;gBAACH,QAAQ,EAAE1B;cAA2B;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAG,eAC3H7F,OAAA;gBAAAyF,QAAA,EAAQ5C,KAAK,CAAC+D;cAAO;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS;YAAA,GAFpBa,KAAK;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAIlB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACA,iBACL,gBAEH7F,OAAA;QAAAyF,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAGV;AAACvF,EAAA,CA/QQD,SAAS;AAAAwG,EAAA,GAATxG,SAAS;AAiRlB,eAAeA,SAAS;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}