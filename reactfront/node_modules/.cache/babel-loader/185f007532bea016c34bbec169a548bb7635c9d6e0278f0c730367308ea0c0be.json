{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pacu\\\\Desktop\\\\f\\\\ElderCare\\\\reactfront\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../CSS/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const errors = {\n    email: 'Invalid email',\n    password: 'Invalid password',\n    confirmPassword: \"Passwords don't match\"\n  };\n  const navigate = useNavigate();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [errorMessages, setErrorMessages] = useState({});\n  const handleSubmit = event => {\n    event.preventDefault();\n    const registerData = document.forms[0];\n    var registerSend = Object.create(null);\n    registerSend.email = registerData.email.value;\n    registerSend.password = registerData.password.value;\n    registerSend.confirmPassword = registerData.confirmPassword.value;\n    if (registerSend.password !== registerSend.confirmPassword) {\n      setErrorMessages({\n        name: 'confirmPassword',\n        message: errors.confirmPassword\n      });\n      return;\n    }\n    console.log(registerSend);\n    fetch('http://localhost:5000/register-user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(registerSend)\n    }).then(response => response.json()).then(data => {\n      if (data['success'] === 'OK') {\n        console.log(data);\n        setIsSubmitted(true);\n        navigate('/main');\n      } else if (data['success'] === 'BAD') {\n        console.log('Registration failed');\n        setErrorMessages({\n          name: 'email',\n          message: errors.email\n        });\n      }\n    });\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 36\n  }, this);\n\n  // JSX code for register form\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [renderErrorMessage('email'), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [renderErrorMessage('password'), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [renderErrorMessage('confirmPassword'), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"login-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User successfully registered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"zjl1yFRisZwbhWfbgcjv1WWuc3M=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","errors","email","password","confirmPassword","navigate","isSubmitted","setIsSubmitted","errorMessages","setErrorMessages","handleSubmit","event","preventDefault","registerData","document","forms","registerSend","Object","create","value","name","message","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","renderErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderForm","onSubmit","type","required","_c","$RefreshReg$"],"sources":["C:/Users/Pacu/Desktop/f/ElderCare/reactfront/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../CSS/login.css';\r\n\r\nfunction Register() {\r\n  const errors = {\r\n    email: 'Invalid email',\r\n    password: 'Invalid password',\r\n    confirmPassword: \"Passwords don't match\",\r\n  };\r\n  const navigate = useNavigate();\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const registerData = document.forms[0];\r\n    var registerSend = Object.create(null);\r\n    registerSend.email = registerData.email.value;\r\n    registerSend.password = registerData.password.value;\r\n    registerSend.confirmPassword = registerData.confirmPassword.value;\r\n\r\n    if (registerSend.password !== registerSend.confirmPassword) {\r\n      setErrorMessages({ name: 'confirmPassword', message: errors.confirmPassword });\r\n      return;\r\n    }\r\n\r\n    console.log(registerSend);\r\n\r\n    fetch('http://localhost:5000/register-user', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(registerSend),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data['success'] === 'OK') {\r\n          console.log(data);\r\n          setIsSubmitted(true);\r\n          navigate('/main');\r\n        } else if (data['success'] === 'BAD') {\r\n          console.log('Registration failed');\r\n          setErrorMessages({ name: 'email', message: errors.email });\r\n        }\r\n      });\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && <div className=\"error\">{errorMessages.message}</div>;\r\n\r\n  // JSX code for register form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          {renderErrorMessage('email')}\r\n          <label className=\"login-label\">Email</label>\r\n          <input type=\"text\" name=\"email\" required />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          {renderErrorMessage('password')}\r\n          <label className=\"login-label\">Password</label>\r\n          <input type=\"password\" name=\"password\" required />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          {renderErrorMessage('confirmPassword')}\r\n          <label className=\"login-label\">Confirm Password</label>\r\n          <input type=\"password\" name=\"confirmPassword\" required />\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" value=\"Register\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-background\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign Up</div>\r\n        {isSubmitted ? <div>User successfully registered</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE,kBAAkB;IAC5BC,eAAe,EAAE;EACnB,CAAC;EACD,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMe,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;IACtC,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACtCF,YAAY,CAACd,KAAK,GAAGW,YAAY,CAACX,KAAK,CAACiB,KAAK;IAC7CH,YAAY,CAACb,QAAQ,GAAGU,YAAY,CAACV,QAAQ,CAACgB,KAAK;IACnDH,YAAY,CAACZ,eAAe,GAAGS,YAAY,CAACT,eAAe,CAACe,KAAK;IAEjE,IAAIH,YAAY,CAACb,QAAQ,KAAKa,YAAY,CAACZ,eAAe,EAAE;MAC1DK,gBAAgB,CAAC;QAAEW,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAEpB,MAAM,CAACG;MAAgB,CAAC,CAAC;MAC9E;IACF;IAEAkB,OAAO,CAACC,GAAG,CAACP,YAAY,CAAC;IAEzBQ,KAAK,CAAC,qCAAqC,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,YAAY;IACnC,CAAC,CAAC,CACCc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;QAC5BX,OAAO,CAACC,GAAG,CAACU,IAAI,CAAC;QACjB1B,cAAc,CAAC,IAAI,CAAC;QACpBF,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM,IAAI4B,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE;QACpCX,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCd,gBAAgB,CAAC;UAAEW,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEpB,MAAM,CAACC;QAAM,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMgC,kBAAkB,GAAId,IAAI,IAC9BA,IAAI,KAAKZ,aAAa,CAACY,IAAI,iBAAItB,OAAA;IAAKqC,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAE5B,aAAa,CAACa;EAAO;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;;EAErF;EACA,MAAMC,UAAU,gBACd3C,OAAA;IAAKqC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBtC,OAAA;MAAM4C,QAAQ,EAAEhC,YAAa;MAAA0B,QAAA,gBAC3BtC,OAAA;QAAKqC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BF,kBAAkB,CAAC,OAAO,CAAC,eAC5BpC,OAAA;UAAOqC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC5C1C,OAAA;UAAO6C,IAAI,EAAC,MAAM;UAACvB,IAAI,EAAC,OAAO;UAACwB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC,eACN1C,OAAA;QAAKqC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BF,kBAAkB,CAAC,UAAU,CAAC,eAC/BpC,OAAA;UAAOqC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/C1C,OAAA;UAAO6C,IAAI,EAAC,UAAU;UAACvB,IAAI,EAAC,UAAU;UAACwB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C,eACN1C,OAAA;QAAKqC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BF,kBAAkB,CAAC,iBAAiB,CAAC,eACtCpC,OAAA;UAAOqC,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACvD1C,OAAA;UAAO6C,IAAI,EAAC,UAAU;UAACvB,IAAI,EAAC,iBAAiB;UAACwB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD,eACN1C,OAAA;QAAKqC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BtC,OAAA;UAAO6C,IAAI,EAAC,QAAQ;UAACxB,KAAK,EAAC;QAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEV;EAED,oBACE1C,OAAA;IAAKqC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BtC,OAAA;MAAKqC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBtC,OAAA;QAAKqC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACnClC,WAAW,gBAAGR,OAAA;QAAAsC,QAAA,EAAK;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,GAAGC,UAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACxC,EAAA,CAjFQD,QAAQ;EAAA,QAMEH,WAAW;AAAA;AAAAiD,EAAA,GANrB9C,QAAQ;AAmFjB,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}