{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pacu\\\\Desktop\\\\f\\\\ElderCare\\\\reactfront\\\\src\\\\components\\\\AdminHouseCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 30;\nconst numCols = 30;\nexport default function AdminHouseCheck() {\n  _s();\n  const {\n    id: userId,\n    name: initialName,\n    surname: initialSurname\n  } = useParams();\n  const [location, setLocation] = useState([{}]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [houseId, setHouseId] = useState('');\n  const [housePlan, setHousePlan] = useState([]);\n  const [noPlanMessage, setNoPlanMessage] = useState('');\n  const emptyGrid = Array.from({\n    length: numRows\n  }, () => Array.from({\n    length: numCols\n  }, () => 0));\n  const [grid, setGrid] = useState(emptyGrid);\n  useEffect(() => {\n    const fetchHouseList = async () => {\n      try {\n        const response = await fetch(`/api/caregivers/${userId}/house-list`);\n        const data = await response.json();\n        setLocation(data);\n      } catch (error) {\n        console.error(`Error fetching house list: ${error.message}`);\n      }\n    };\n    fetchHouseList();\n  }, [userId]);\n  useEffect(() => {\n    const fetchHousePlan = async address => {\n      try {\n        const response = await fetch(`/api/monitor?name=${encodeURIComponent(initialName)}&sirname=${encodeURIComponent(initialSurname)}&address=${encodeURIComponent(address)}&userId=${encodeURIComponent(userId)}`);\n        const data = await response.json();\n        if (data.rooms && data.housePlan) {\n          setHousePlan(data.rooms);\n          setGrid(data.housePlan);\n          setNoPlanMessage('');\n        } else {\n          setHousePlan([]);\n          setGrid(emptyGrid);\n          setNoPlanMessage('The selected address does not contain a house plan.');\n        }\n      } catch (error) {\n        console.error(`Error fetching house plan: ${error.message}`);\n      }\n    };\n    if (selectedLocation) {\n      const [id, address] = selectedLocation.split('+');\n      setHouseId(id);\n      fetchHousePlan(address);\n    }\n  }, [selectedLocation, initialName, initialSurname, userId]);\n  const handleLocationChange = event => {\n    setSelectedLocation(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"AdminHouseCheck\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: location.map((house, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"houseLocation\",\n          value: `${house.id}+${house.address}`,\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: house.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), noPlanMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-plan-message\",\n      children: noPlanMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid-cell${cell ? ' cell-filled' : ''}`,\n          style: cell ? {\n            backgroundColor: cell\n          } : {}\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: housePlan.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room: \", room.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminHouseCheck, \"F7rE+UTK+kUj5cOg14Jql1HQTIA=\", false, function () {\n  return [useParams];\n});\n_c = AdminHouseCheck;\nvar _c;\n$RefreshReg$(_c, \"AdminHouseCheck\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","numRows","numCols","AdminHouseCheck","_s","id","userId","name","initialName","surname","initialSurname","location","setLocation","selectedLocation","setSelectedLocation","houseId","setHouseId","housePlan","setHousePlan","noPlanMessage","setNoPlanMessage","emptyGrid","Array","from","length","grid","setGrid","fetchHouseList","response","fetch","data","json","error","console","message","fetchHousePlan","address","encodeURIComponent","rooms","split","handleLocationChange","event","target","value","children","map","house","index","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","row","rowIndex","cell","cellIndex","style","backgroundColor","room","_c","$RefreshReg$"],"sources":["C:/Users/Pacu/Desktop/f/ElderCare/reactfront/src/components/AdminHouseCheck.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst numRows = 30;\r\nconst numCols = 30;\r\n\r\nexport default function AdminHouseCheck() {\r\n  const { id: userId, name: initialName, surname: initialSurname} = useParams();\r\n  const [location, setLocation] = useState([{}]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [houseId, setHouseId] = useState('');\r\n  const [housePlan, setHousePlan] = useState([]);\r\n  const [noPlanMessage, setNoPlanMessage] = useState('');\r\n\r\n  const emptyGrid = Array.from({ length: numRows }, () => Array.from({ length: numCols }, () => 0));\r\n  const [grid, setGrid] = useState(emptyGrid);\r\n\r\n  useEffect(() => {\r\n    const fetchHouseList = async () => {\r\n      try {\r\n        const response = await fetch(`/api/caregivers/${userId}/house-list`);\r\n        const data = await response.json();\r\n        setLocation(data);\r\n      } catch (error) {\r\n        console.error(`Error fetching house list: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    fetchHouseList();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const fetchHousePlan = async (address) => {\r\n      try {\r\n        const response = await fetch(`/api/monitor?name=${encodeURIComponent(initialName)}&sirname=${encodeURIComponent(initialSurname)}&address=${encodeURIComponent(address)}&userId=${encodeURIComponent(userId)}`);\r\n        const data = await response.json();\r\n        if (data.rooms && data.housePlan) {\r\n          setHousePlan(data.rooms);\r\n          setGrid(data.housePlan);\r\n          setNoPlanMessage('');\r\n        } else {\r\n          setHousePlan([]);\r\n          setGrid(emptyGrid);\r\n          setNoPlanMessage('The selected address does not contain a house plan.');\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error fetching house plan: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    if (selectedLocation) {\r\n      const [id, address] = selectedLocation.split('+');\r\n      setHouseId(id);\r\n      fetchHousePlan(address);\r\n    }\r\n  }, [selectedLocation, initialName, initialSurname, userId]);\r\n\r\n  const handleLocationChange = (event) => {\r\n    setSelectedLocation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>AdminHouseCheck\r\n      <div>\r\n        {location.map((house, index) => (\r\n          <div key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"houseLocation\"\r\n              value={`${house.id}+${house.address}`}\r\n              onChange={handleLocationChange}\r\n            />\r\n            <label>{house.address}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {noPlanMessage && <p className=\"no-plan-message\">{noPlanMessage}</p>}\r\n      <div className=\"grid\">\r\n        {grid.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"grid-row\">\r\n            {row.map((cell, cellIndex) => (\r\n              <div\r\n                key={cellIndex}\r\n                className={`grid-cell${cell ? ' cell-filled' : ''}`}\r\n                style={cell ? { backgroundColor: cell } : {}}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {housePlan.map((room, index) => (\r\n                   <div key={index}>\r\n                   <p>Room: {room.name}</p>\r\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n         );\r\n       }\r\n       \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}